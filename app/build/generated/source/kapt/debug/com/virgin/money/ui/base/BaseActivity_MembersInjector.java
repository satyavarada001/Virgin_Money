// Generated by Dagger (https://dagger.dev).
package com.virgin.money.ui.base;

import androidx.fragment.app.FragmentFactory;
import androidx.lifecycle.ViewModelProvider;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class BaseActivity_MembersInjector implements MembersInjector<BaseActivity> {
  private final Provider<FragmentFactory> fragmentFactoryProvider;

  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  public BaseActivity_MembersInjector(Provider<FragmentFactory> fragmentFactoryProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider) {
    this.fragmentFactoryProvider = fragmentFactoryProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.androidInjectorProvider = androidInjectorProvider;
  }

  public static MembersInjector<BaseActivity> create(
      Provider<FragmentFactory> fragmentFactoryProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider) {
    return new BaseActivity_MembersInjector(fragmentFactoryProvider, viewModelFactoryProvider, androidInjectorProvider);
  }

  @Override
  public void injectMembers(BaseActivity instance) {
    injectFragmentFactory(instance, fragmentFactoryProvider.get());
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
    injectAndroidInjector(instance, androidInjectorProvider.get());
  }

  @InjectedFieldSignature("com.virgin.money.ui.base.BaseActivity.fragmentFactory")
  public static void injectFragmentFactory(BaseActivity instance, FragmentFactory fragmentFactory) {
    instance.fragmentFactory = fragmentFactory;
  }

  @InjectedFieldSignature("com.virgin.money.ui.base.BaseActivity.viewModelFactory")
  public static void injectViewModelFactory(BaseActivity instance,
      ViewModelProvider.Factory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }

  @InjectedFieldSignature("com.virgin.money.ui.base.BaseActivity.androidInjector")
  public static void injectAndroidInjector(BaseActivity instance,
      DispatchingAndroidInjector<Object> androidInjector) {
    instance.androidInjector = androidInjector;
  }
}
