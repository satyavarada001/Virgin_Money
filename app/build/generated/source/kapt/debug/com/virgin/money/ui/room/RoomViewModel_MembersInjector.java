// Generated by Dagger (https://dagger.dev).
package com.virgin.money.ui.room;

import androidx.lifecycle.MutableLiveData;
import com.virgin.money.data.models.Room;
import com.virgin.money.data.states.Result;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import java.util.List;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomViewModel_MembersInjector implements MembersInjector<RoomViewModel> {
  private final Provider<MutableLiveData<Result<List<Room>>>> roomsProvider;

  private final Provider<MutableLiveData<Integer>> loadingVisibilityProvider;

  private final Provider<MutableLiveData<Boolean>> errorProvider;

  public RoomViewModel_MembersInjector(Provider<MutableLiveData<Result<List<Room>>>> roomsProvider,
      Provider<MutableLiveData<Integer>> loadingVisibilityProvider,
      Provider<MutableLiveData<Boolean>> errorProvider) {
    this.roomsProvider = roomsProvider;
    this.loadingVisibilityProvider = loadingVisibilityProvider;
    this.errorProvider = errorProvider;
  }

  public static MembersInjector<RoomViewModel> create(
      Provider<MutableLiveData<Result<List<Room>>>> roomsProvider,
      Provider<MutableLiveData<Integer>> loadingVisibilityProvider,
      Provider<MutableLiveData<Boolean>> errorProvider) {
    return new RoomViewModel_MembersInjector(roomsProvider, loadingVisibilityProvider, errorProvider);
  }

  @Override
  public void injectMembers(RoomViewModel instance) {
    injectRooms(instance, roomsProvider.get());
    injectLoadingVisibility(instance, loadingVisibilityProvider.get());
    injectError(instance, errorProvider.get());
  }

  @InjectedFieldSignature("com.virgin.money.ui.room.RoomViewModel.rooms")
  public static void injectRooms(RoomViewModel instance,
      MutableLiveData<Result<List<Room>>> rooms) {
    instance.rooms = rooms;
  }

  @InjectedFieldSignature("com.virgin.money.ui.room.RoomViewModel.loadingVisibility")
  public static void injectLoadingVisibility(RoomViewModel instance,
      MutableLiveData<Integer> loadingVisibility) {
    instance.loadingVisibility = loadingVisibility;
  }

  @InjectedFieldSignature("com.virgin.money.ui.room.RoomViewModel.error")
  public static void injectError(RoomViewModel instance, MutableLiveData<Boolean> error) {
    instance.error = error;
  }
}
