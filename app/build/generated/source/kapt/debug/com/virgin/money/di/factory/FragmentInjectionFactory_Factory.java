// Generated by Dagger (https://dagger.dev).
package com.virgin.money.di.factory;

import androidx.fragment.app.Fragment;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import java.util.Map;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FragmentInjectionFactory_Factory implements Factory<FragmentInjectionFactory> {
  private final Provider<Map<Class<? extends Fragment>, Provider<Fragment>>> creatorsProvider;

  public FragmentInjectionFactory_Factory(
      Provider<Map<Class<? extends Fragment>, Provider<Fragment>>> creatorsProvider) {
    this.creatorsProvider = creatorsProvider;
  }

  @Override
  public FragmentInjectionFactory get() {
    return newInstance(creatorsProvider.get());
  }

  public static FragmentInjectionFactory_Factory create(
      Provider<Map<Class<? extends Fragment>, Provider<Fragment>>> creatorsProvider) {
    return new FragmentInjectionFactory_Factory(creatorsProvider);
  }

  public static FragmentInjectionFactory newInstance(
      Map<Class<? extends Fragment>, Provider<Fragment>> creators) {
    return new FragmentInjectionFactory(creators);
  }
}
