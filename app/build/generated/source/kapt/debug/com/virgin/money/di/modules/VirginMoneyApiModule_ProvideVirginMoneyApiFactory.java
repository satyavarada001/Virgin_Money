// Generated by Dagger (https://dagger.dev).
package com.virgin.money.di.modules;

import com.virgin.money.data.api.VirginMoneyApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VirginMoneyApiModule_ProvideVirginMoneyApiFactory implements Factory<VirginMoneyApi> {
  private final VirginMoneyApiModule module;

  private final Provider<Retrofit> retrofitProvider;

  public VirginMoneyApiModule_ProvideVirginMoneyApiFactory(VirginMoneyApiModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public VirginMoneyApi get() {
    return provideVirginMoneyApi(module, retrofitProvider.get());
  }

  public static VirginMoneyApiModule_ProvideVirginMoneyApiFactory create(
      VirginMoneyApiModule module, Provider<Retrofit> retrofitProvider) {
    return new VirginMoneyApiModule_ProvideVirginMoneyApiFactory(module, retrofitProvider);
  }

  public static VirginMoneyApi provideVirginMoneyApi(VirginMoneyApiModule instance,
      Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideVirginMoneyApi(retrofit));
  }
}
